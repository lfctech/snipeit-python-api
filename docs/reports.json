{
    "openapi": "3.1.0",
    "info": {
        "title": "Snipe-IT v6 API",
        "version": "7.1.17"
    },
    "servers": [
        {
            "url": "https://web.archive.org/web/20250424002126/https://develop.snipeitapp.com/api/v1"
        }
    ],
    "components": {
        "securitySchemes": {}
    },
    "security": [
        {}
    ],
    "paths": {
        "/reports/activity": {
            "get": {
                "summary": "/reports/activity",
                "description": "",
                "operationId": "reportsactivity",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify the number of results you wish to return. Defaults to 50, but we have it set to 2 by default so the API explorer doesn't scroll forever.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 2
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The offset from the start of results to use in order to page through the result set",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "String to search on",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target_type",
                        "in": "query",
                        "description": "The type of target (entity something is checked out to) you're searching against. `App\\Models\\User`, etc. Required when passing target_id.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target_id",
                        "in": "query",
                        "description": "The ID of the target you're querying against. Required if passing target_type",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "item_type",
                        "in": "query",
                        "description": "The type of item you're searching against. `App\\Models\\Asset`, etc. Required when passing item_id.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "accessory",
                                "consumable",
                                "component",
                                "user"
                            ]
                        }
                    },
                    {
                        "name": "item_id",
                        "in": "query",
                        "description": "The ID of the item you're querying against. Required if passing item_type",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "action_type",
                        "in": "query",
                        "description": "The action type you'e querying against. Example values here are: \"add seats\", \"checkin from\", \"checkout\", \"update\"",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "checkout",
                                "checkin from",
                                "update",
                                "create",
                                "delete",
                                "audit",
                                "uploaded",
                                "accepted",
                                "declined",
                                "requested"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Ascending or descending order (defaults to desc if no value is given)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "default": "desc"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "What column the results should be sorted by (defaults to created_at date if no value is given)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "created_at",
                                "target_id",
                                "user_id",
                                "accept_signature",
                                "action_type",
                                "note (defaults to desc if not value is given)"
                            ],
                            "default": "created_at"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        }
    }
}